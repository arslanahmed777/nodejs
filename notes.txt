async componentDidMount() {
    try {
      const response = await fetch(`https://api.com/v1/ticker/?limit=10`);
      const json = await response.json();
      this.setState({ data: json });
    } catch (error) {
      console.log(error);
    }
}


https://mui-treasury.com/components/

this is notes


 see the cursor movement is smooth while typing and its awesome, how to do that?
 
Some settings to look at in settings.json:
"editor.cursorBlinking": "smooth"
"editor.smoothScrolling": true
"editor.cursorSmoothCaretAnimation": true

Or search for "smooth" and "blinking" in the Settings.



const express = require("express");
const router = express.Router();
const mongoose = require("mongoose");
const jwt = require("jsonwebtoken");
const users = mongoose.model("users");
const bcrypt = require("bcrypt");

router.post("/signIn", async (req, res) => {
  const { email, password } = req.body;
  console.log(email);
  console.log(password);
  const user = await users.findOne({ email: email });
  if (!user) {
    // return res.send({ error: "Email not found" });
    // return res.json("Asdf");
    // res.status(400).send("Bad Reasdasdquest");
    return res.status(200).json({ error: "Unauthorized" });
  }
  try {
    const match = await bcrypt.compare(password, user.password);

    if (!match) {
      return res.send({ error: "password not matched" });
    } else {
      const token = jwt.sign({ email: user.email }, "asdfsasadfasdfse", {
        expiresIn: "1h",
      });
      return res.send({ user, token });
    }

    // users.findOne(
    //   { email: email.toLowerCase() },
    //   { password: 0 },
    //   async (error, data) => {
    //     if (error) {
    //       console.log(error);
    //     } else if (data) {
    //       console.log("data", data);
    //       data.dp = await fs.readFileSync(data.dp).toString("base64");
    //       res.json({ token, data });
    //     }
    //   }
    // );
  } catch (error) {
    console.log("login catch error:", error);
    return res.send({ error: "Enter Valid UserName or Password!!" });
  }
});

router.post("/signup", (req, res) => {
  try {
    const { username, email, password } = req.body;
    bcrypt.hash(password, 10).then((hash) => {
      const user = new users({
        name: username,
        email: email,
        password: hash,
      });
      user
        .save()
        .then((result) => {
          jwt.sign(
            { email: email },
            "asdfsasadfasdfse",
            { expiresIn: "1h" },
            (err, token) => {
              res.status(201).json({
                message: "User added successfully!",
                user: result,
                token,
              });
            }
          );
        })
        .catch((error) => {
          console.log("Signup catch error:", error);
          res.status(404).json({
            error: error,
          });
        });
    });
  } catch (error) {
    console.log("Signup catch error:", error);
    return res.send(error);
  }
});

module.exports = router;

for progressbar https://flexiple.com/javascript-check-if-function/

https://codesandbox.io/s/react-accordion-using-react-hooks-9uuvc?file=/components/Accordion.css


https://github.com/Dynamsoft/dwt-react-advanced
https://github.com/Dynamsoft/dwt-react-simple/blob/master/src/DynamsoftSDK.js
https://www.dynamsoft.com/web-twain/docs/info/api/WebTwain_IO.html?ver=latest#httpupload